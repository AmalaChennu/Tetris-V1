pipeline {
    agent any
    tools {
        jdk 'jdk17'
        nodejs 'node16'
    }
    environment {
        SCANNER_HOME = tool 'sonar-scanner'
        GIT_REPO_NAME = "Tetris-manifest"
        GIT_USER_NAME = "RajinikanthVadla"
        GITHUB_TOKEN = credentials('github') // Assuming you've set up a secret text credential named 'github' for the GitHub token
    }
    stages {
        stage('clean workspace') {
            steps {
                cleanWs()
            }
        }
        stage('Checkout from Git') {
            steps {
                git branch: 'main', url: 'https://github.com/RajinikanthVadla/Tetris-V1.git'
            }
        }
        // stage("Sonarqube Analysis") {
        //     steps {
        //         withSonarQubeEnv('sonar-server') {
        //             sh ''' $SCANNER_HOME/bin/sonar-scanner -Dsonar.projectName=TetrisVersion1.0 \
        // //             -Dsonar.projectKey=TetrisVersion1.0 '''
        //         }
        //     }
        // }
        // stage('Install Dependencies') {
        //     steps {
        //         sh "npm install"
        //     }
        // }
        // stage('TRIVY FS SCAN') {
        //     steps {
        //         sh "trivy fs . > trivyfs.txt"
        //     }
        // }
        stage("Docker Build & Push") {
            steps {
                script {
                    withDockerRegistry(credentialsId: 'docker', toolName: 'docker') {
                        sh "docker build -t tetrisv1 ."
                        sh "docker tag tetrisv1 rajinikanthvadla/dockerchappie:latest"
                        sh "docker push rajinikanthvadla/dockerchappie:latest"
                    }
                }
            }
        }
        // stage("TRIVY") {
        //     steps {
        //         sh "trivy image rajinikanthvadla/dockerchappie:latest > trivyimage.txt"
        //     }
        // }
        stage('Checkout Code') {
            steps {
                git branch: 'main', url: 'https://github.com/RajinikanthVadla/Tetris-manifest.git'
            }
        }
        stage('Update Deployment File') {
            steps {
                script {
                    withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
                        // Determine the image name dynamically based on your versioning strategy
                        def NEW_IMAGE_NAME = "rajinikanthvadla/dockerchappie:latest"

                        // Replace the image name in the deployment.yaml file
                        //sh "sed -i 's|image: .*|image: $NEW_IMAGE_NAME|' deployment.yml"
                        sh "sed -i 's|image:[[:space:]]*.*|image: $NEW_IMAGE_NAME|' deployment.yml"

                        // Git commands to stage, commit, and push the changes
                        sh "git add deployment.yml"
                        sh "git status"
                        sh "git commit -m 'Update deployment image to $NEW_IMAGE_NAME'"
                        sh "git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main"
                    }
                }
            }
        }
    }
}
